name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-20.04

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
          registries: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t xpensemeter-app .
          docker tag xpensemeter-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/xpensemeter-repo:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/xpensemeter-repo:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name xpensemeter-cluster --region ${{ secrets.AWS_REGION }}

      - name: Create Kubernetes Secret for Environment Variables
        run: |
          kubectl create secret generic xpensemeter-secrets \
            --from-literal=DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --from-literal=JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --from-literal=JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY }} \
            --from-literal=ALGORITHM=${{ secrets.ALGORITHM }} \
            --from-literal=ACCESS_TOKEN_EXPIRATION_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRATION_MINUTES }} \
            --from-literal=REFRESH_TOKEN_EXPIRE_MINUTES=${{ secrets.REFRESH_TOKEN_EXPIRE_MINUTES }} \
            --from-literal=MY_EMAIL=${{ secrets.MY_EMAIL }} \
            --from-literal=EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
            --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --from-literal=AWS_REGION=${{ secrets.AWS_REGION }} \
            --from-literal=AWS_BUCKET=${{ secrets.AWS_BUCKET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -k k8s/prod
